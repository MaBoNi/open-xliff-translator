name: Build and Push Docker Image

on:
  push:
    branches:
      - main

permissions:
  contents: read
  packages: write

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        id: buildx  # ✅ This ensures the builder reference works

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Restore Docker Build Cache
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: buildx-${{ github.sha }}
          restore-keys: |
            buildx-

      - name: Cache pip dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Set version-date tag
        id: tag
        run: |
          VERSION="v1.0.0"
          if [ ! -z "${{ github.event.release.tag_name }}" ]; then
            VERSION=${{ github.event.release.tag_name }}
          fi
          DATE_TAG=$(date +'%Y%m%d')
          VERSION_TAG="${VERSION}-${DATE_TAG}"
          echo "tag=${VERSION_TAG}" >> $GITHUB_ENV

      - name: Build and Push Open XLIFF Translator Image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: |
            maboni82/open-xliff-translator:latest
            maboni82/open-xliff-translator:${{ env.tag }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache,mode=max
          builder: ${{ steps.buildx.outputs.name }}  # ✅ Fixed
