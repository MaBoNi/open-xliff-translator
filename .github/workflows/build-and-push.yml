name: Build and Push Docker Images

on:
  push:
    branches:
      - main

permissions:
  contents: read
  packages: write

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Set version-date tag
        id: tag
        run: |
          VERSION="v1.0.0"  # Default version if no release tag is found
          if [ ! -z "${{ github.event.release.tag_name }}" ]; then
            VERSION=${{ github.event.release.tag_name }}
          fi
          DATE_TAG=$(date +'%Y%m%d')
          VERSION_TAG="${VERSION}-${DATE_TAG}"
          echo "tag=${VERSION_TAG}" >> $GITHUB_ENV

      - name: Build and Push Backend Image
        uses: docker/build-push-action@v6
        with:
          context: ./backend
          push: true
          tags: |
            maboni82/open-xliff-translator-backend:latest
            maboni82/open-xliff-translator-backend:${{ env.tag }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          builder: ${{ steps.buildx.outputs.name }}

      - name: Build and Push Frontend Image
        uses: docker/build-push-action@v6
        with:
          context: ./frontend
          push: true
          tags: |
            maboni82/open-xliff-translator-frontend:latest
            maboni82/open-xliff-translator-frontend:${{ env.tag }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          builder: ${{ steps.buildx.outputs.name }}
